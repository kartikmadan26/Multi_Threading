import streamlit as st
import os,sys,time,random as r,threading,multiprocessing
from streamlit.scriptrunner.script_run_context import add_script_run_ctx
st.markdown("<h1 style='text-align: center;'>Multi Threading</h1>", unsafe_allow_html=True)

col1, col2, col3 = st.columns(3)
col4, col5, col6 = st.columns(3)
st.markdown("<p style='text-align: left;'>This project uses the Streamlit framework to demonstrate multi-threading in Python. The project consists of six functions (f1 to f6) that generate random numbers within a specific range, which are then displayed on the Streamlit app. The project demonstrates that running these functions in a normal implementation would not work because they would run sequentially, causing delays in the program's execution. To overcome this, the project uses multi-threading to run the six functions simultaneously. Each function is run on a separate thread, and the threads are synchronized using the <b>join()</b> method to ensure that all the threads complete their execution before the program terminates. The Streamlit app displays the random numbers generated by each function in real-time, and the user can see the results in the six columns displayed on the app. The project provides an interactive way to learn about multi-threading in Python and the benefits of running tasks simultaneously to improve program efficiency.</p>", unsafe_allow_html=True)

def task(lb,ub,refreshtime,col):
    with col:
        mes="[ "+str(lb)+" , "+str(ub)+" ] "+" time = "+str(refreshtime)
        st.text(mes)
        
        message = "Hello, World!"
        text_element = st.text(message)
        while(1):
            num=r.randint(lb,ub)
        # text_element = st.text(num)
            text_element.text(num)
            # display(num,col)
            # print(num)
            # st.write(num)
            time.sleep(refreshtime)
        return
def main():
    # task(10,20,10)
    t1=threading.Thread(target=task,args=(10,20,10,col1))
    t2=threading.Thread(target=task,args=(-10,10,1,col2))
    t3=threading.Thread(target=task,args=(-100,0,5,col3))
    t4=threading.Thread(target=task,args=(0,20,8,col4))
    t5=threading.Thread(target=task,args=(-40,40,2,col5))
    t6=threading.Thread(target=task,args=(100,200,1,col6))
    add_script_run_ctx(t1)
    t1.start()
    add_script_run_ctx(t2)
    t2.start()
    add_script_run_ctx(t3)
    t3.start()
    add_script_run_ctx(t4)
    t4.start()
    add_script_run_ctx(t5)
    t5.start()
    add_script_run_ctx(t6)
    t6.start()
    t1.join()
    t2.join()
    t3.join()
    t4.join()
    t5.join()
    t6.join()
main()
